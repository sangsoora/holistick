<div class="container practitioner-my-services">
  <div class="my-services-header">
    <ul class="list-inline tabs-underlined mb-0">
      <li>
        <p class="tab-underlined active-tab">Active <span id="active-services-num"><% if @active_serivces.count > 0 %> (<%= @active_serivces.count %>) <% end %></span></p>
      </li>
      <li>
        <p class="tab-underlined">Deactivated <span id="deactivated-services-num"><% if @deactivated_serivces.count > 0 %> (<%= @deactivated_serivces.count%>) <% end %></span></p>
      </li>
      <li>
        <p class="tab-underlined">Discovery Call</p>
      </li>
    </ul>
    <% if current_user.practitioner.minimum_profile? %>
      <%= link_to 'Add new service', '', data: { toggle: "modal", target: "#newServiceModal" }, class: 'btn btn-flat' %>
    <% end %>
  </div>
  <div class="lists">
    <div class="my-services" id="active-list">
      <%= render 'services/active_services_list', active_serivces: @active_serivces %>
    </div>
  </div>
  <div class="lists">
    <div class="my-services" id="deactivated-list">
      <%= render 'services/deactivated_services_list', deactivated_serivces: @deactivated_serivces %>
    </div>
  </div>
  <div class="lists">
    <div class="my-services">
      <div class="practitioner-service">
        <div class="practitioner-service-info">
          <div class="d-flex justify-content-between">
            <h4><%= Service.first.name %></h4>
            <div>
            </div>
          </div>
          <p>Service Type: <%= Service.first.service_type.capitalize %></p>
          <p>Duration: <%= Service.first.duration %>m</p>
          <div class="practitioner-service-description">
            <p>Take 15 minutes session to find out more about <%= @practitioner.user.first_name %> and <%= @practitioner.user.first_name %>'s services. Only offered once!</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="modal fade" id="newServiceModal" tabindex="-1" role="dialog" aria-labelledby="newServiceModalLabel" aria-hidden="true">
  <%= render 'services/service_create_form', practitioner: @practitioner, service: @service %>
</div>
<script>
  document.getElementById('service_description').addEventListener('keyup', (e) => {
    const description_count = document.getElementById('service_description').value.length;
    const description_max = document.getElementById('service_description').maxLength;
    const description_counter = document.getElementById('description-counter');
    if (description_count == 1000) {
      description_counter.innerText = '1000/1000';
      description_counter.style.color = 'red';
      document.getElementById('create-service').disabled = false;
    } else if ((description_count < 5) || (description_count > 1000)) {
      description_counter.innerText = description_count + '/1000';
      description_counter.style.color = 'red';
      document.getElementById('create-service').disabled = true;
    } else {
      description_counter.innerText = description_count + '/1000';
      description_counter.style.color = 'black';
      document.getElementById('create-service').disabled = false;
    }
  });
  var max = 5;
  var checks = document.querySelectorAll(".check");
  for (var i = 0; i < checks.length; i++) {
    checks[i].onclick = selectiveCheck;
  }
  function selectiveCheck (e) {
    var checkedChecks = document.querySelectorAll(".check:checked");
    if (checkedChecks.length >= max + 1) {
      return false;
    } else {
      document.getElementById('create_label_' + e.currentTarget.value).classList.toggle('active');
    }
  }
  <% @practitioner.services.each do |service| %>
    const serviceBtn<%= service.id %> = document.getElementById('service-btn-<%= service.id %>');
    const cancelServiceBtn<%= service.id %> = document.getElementById('cancel-service-<%= service.id %>');
    serviceBtn<%= service.id %>.addEventListener('click', (e) => {
      e.preventDefault();
      document.getElementById('service-<%= service.id %>').style.display = 'none';
      document.getElementById('edit_service_<%= service.id %>').style.display = 'block';
    })
    cancelServiceBtn<%= service.id %>.addEventListener('click', (e) => {
      e.preventDefault();
      document.getElementById('service-<%= service.id %>').style.display = 'block';
      document.getElementById('edit_service_<%= service.id %>').style.display = 'none';
    })
    var checks<%= service.id %> = document.querySelectorAll(".check-<%= service.id %>");
    for (var i = 0; i < checks<%= service.id %>.length; i++) {
      checks<%= service.id %>[i].onclick = selectiveCheck<%= service.id %>;
    }
    function selectiveCheck<%= service.id %> (e) {
      var checkedChecks<%= service.id %> = document.querySelectorAll(".check-<%= service.id %>:checked");
      if (checkedChecks<%= service.id %>.length >= max + 1) {
        return false;
      } else {
        document.getElementById('<%= service.id %>_label_' + e.currentTarget.value).classList.toggle('active');
      }
    }
    document.getElementById('service_description_<%= service.id %>').addEventListener('keyup', (e) => {
      const description_count_<%= service.id %> = document.getElementById('service_description_<%= service.id %>').value.length;
      const description_max_<%= service.id %> = document.getElementById('service_description_<%= service.id %>').maxLength;
      const description_counter_<%= service.id %> = document.getElementById('description-counter-<%= service.id %>');
      if (description_count_<%= service.id %> == 1000) {
        description_counter_<%= service.id %>.innerText = '1000/1000';
        description_counter_<%= service.id %>.style.color = 'red';
        document.getElementById('update-service-<%= @service.id %>').disabled = false;
      } else if ((description_count_<%= service.id %> < 5) || (description_count_<%= service.id %> > 1000)) {
        description_counter_<%= service.id %>.innerText = description_count_<%= service.id %> + '/1000';
        description_counter_<%= service.id %>.style.color = 'red';
        document.getElementById('update-service-<%= @service.id %>').disabled = true;
      } else {
        description_counter_<%= service.id %>.innerText = description_count_<%= service.id %> + '/1000';
        description_counter_<%= service.id %>.style.color = 'black';
        document.getElementById('update-service-<%= @service.id %>').disabled = false;
      }
    });
  <% end %>
  const tabs = document.querySelectorAll('.tab-underlined');
  const lists = document.querySelectorAll('.lists');
  const entries = function*(iterable) {
    let i = 0;
    for (item of iterable) {
      yield [i++, item]
    }
  }
  const showBlock = index => {
    for (const [blockIndex, block] of entries(lists)) {
      block.style.display = blockIndex === index ? 'block' : 'none'
    }
  }
  showBlock(0)
  for (const [tabIndex, tab] of entries(tabs)) {
    tab.addEventListener('click', e => {
      e.preventDefault();
      showBlock(tabIndex);
      const activeTab = document.querySelector('.active-tab');
      if (!e.currentTarget.classList.contains('active-tab')) {
        if (activeTab !== null) {
          activeTab.classList.remove('active-tab');
        }
        e.currentTarget.classList.toggle('active-tab');
      }
    });
  }
</script>
