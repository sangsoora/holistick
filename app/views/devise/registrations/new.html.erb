<div class="container devise">
  <div class="signup">

    <h2>Sign Up</h2>

    <%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
      <%= f.error_notification %>

      <div class="form-inputs">
        <div class="hp">
          <input type="checkbox" value="1" name="hp" autocomplete="off" tabindex="-1">
          <label for="hp">Huemans should NOT click this.</label>
        </div>
        <%= f.input :email,
                    required: true,
                    autofocus: true,
                    input_html: { autocomplete: "email" }%>
        <%= f.input :first_name,
                    required: true,
                    input_html: { autocomplete: "first-name" }%>
        <%= f.input :last_name,
                    required: true,
                    input_html: { autocomplete: "last-name" }%>
        <div class="form-group password required user_password">
          <label class="password required" for="password1">Password <abbr title="required">*</abbr></label>
          <input class="form-control password required" autocomplete="new-password" id="password1" required="required" aria-required="true" type="password" name="user[password]">
          <a class="password-control">Show password</a>
          <small class="form-text text-muted">Password should have more than 8 characters including 1 lowercase letter, 1 uppercase letter, 1 number and 1 special character</small>
        </div>
        <div class="form-group password optional user_password_confirmation">
          <label class="password optional" for="password2">Password confirmation</label>
          <input class="form-control password optional" autocomplete="new-password" id="password2" type="password" name="user[password_confirmation]">
          <a class="password-control">Show password</a>
        </div>
        <%#= f.input :password,
                    required: true,
                    hint: ("Password should have more than 8 characters including 1 lowercase letter, 1 uppercase letter, 1 number and 1 special character"),
                    input_html: { autocomplete: "new-password", id: "password1" }  %>
        <%#= f.input :password_confirmation,
                    hint: (""),
                    input_html: { autocomplete: "new-password", id: "password2" } %>
        <%= invisible_captcha %>
        <div class="form-group tel optional user_phone_number">
          <label class="tel optional" for="user_phone_number">Phone number</label>
          <input class="form-control string tel optional" type="tel" id="user_phone_number">
          <input type="hidden" id="validated_number" name="user[phone_number]">
          <span id="tel-valid-msg" class="hidden">âœ“ Valid</span>
          <span id="tel-error-msg" class="hidden"></span>
        </div>
        <%= f.input :timezone, as: :hidden, input_html: { id: :timezone } %>
        <input type="hidden" id="invite_token" name="user[invite_token]">
      </div>

      <div class="my-3">

        <div class="form-check">
          <input name="user[terms]" type="hidden" value="false">
          <input type="checkbox" value="true" name="user[terms]" id="user_terms">
          <label class="form-check-label boolean optional" for="user_terms">I have read and agree to the <a href="/terms" target="_blank" style="text-decoration: underline;">Terms of Use</a>.</label>
        </div>

        <div class="form-check">
          <input name="user[newsletter]" type="hidden" value="false">
          <input type="checkbox" value="true" name="user[newsletter]" id="user_newsletter">
          <label class="form-check-label boolean optional" for="user_newsletter">I agree to receive marketing communications. (optional)</label>
        </div>
      </div>

      <div class="form-actions">
        <%= f.button :submit, "Sign Up", class: "btn-flat w-100", id: 'submit-btn' %>
      </div>
    <% end %>

    <%= render "devise/shared/links" %>
  </div>
</div>

<script>
  document.getElementById("submit-btn").disabled = true;
  const checkbox = document.getElementById('user_terms');
  if (checkbox) {
    checkbox.addEventListener( 'change', function() {
      if(checkbox.checked === true) {
        document.getElementById("submit-btn").disabled = false;
      } else {
        document.getElementById("submit-btn").disabled = true;
      }
    });
  }
  document.addEventListener('DOMContentLoaded', () => {
    const tz = moment.tz.guess();
    document.getElementById('timezone').value = tz;
  });
  const queryString = window.location.search;
  const urlParams = new URLSearchParams(queryString);
  const it = urlParams.get('it');
  if (it) {
    document.getElementById('invite_token').value = it;
  }
</script>
